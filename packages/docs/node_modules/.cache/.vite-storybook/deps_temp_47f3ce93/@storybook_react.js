import {
  renderElement,
  unmountElement
} from "./chunk-KRDZVWSL.js";
import "./chunk-7CASF67Q.js";
import "./chunk-ZHCUIEE5.js";
import {
  scope
} from "./chunk-53B3XB6V.js";
import {
  require_preview_api
} from "./chunk-J53OZ55K.js";
import {
  require_react
} from "./chunk-UXJYJ7WW.js";
import {
  require_client_logger
} from "./chunk-PSRMCVHP.js";
import {
  __toESM
} from "./chunk-AUZ3RYOM.js";

// ../../node_modules/@storybook/react/dist/chunk-JWY6Y6NU.mjs
var import_react = __toESM(require_react(), 1);
var { FRAMEWORK_OPTIONS } = scope;
var render = (args, context) => {
  let { id, component: Component2 } = context;
  if (!Component2)
    throw new Error(`Unable to render story ${id} as the component annotation is missing from the default export`);
  return import_react.default.createElement(Component2, { ...args });
};
var ErrorBoundary = class extends import_react.Component {
  constructor() {
    super(...arguments);
    this.state = { hasError: false };
  }
  static getDerivedStateFromError() {
    return { hasError: true };
  }
  componentDidMount() {
    let { hasError } = this.state, { showMain } = this.props;
    hasError || showMain();
  }
  componentDidCatch(err) {
    let { showException } = this.props;
    showException(err);
  }
  render() {
    let { hasError } = this.state, { children } = this.props;
    return hasError ? null : children;
  }
};
var Wrapper = (FRAMEWORK_OPTIONS == null ? void 0 : FRAMEWORK_OPTIONS.strictMode) ? import_react.StrictMode : import_react.Fragment;
async function renderToCanvas({ storyContext, unboundStoryFn, showMain, showException, forceRemount }, canvasElement) {
  let content = import_react.default.createElement(ErrorBoundary, { showMain, showException }, import_react.default.createElement(unboundStoryFn, { ...storyContext })), element = Wrapper ? import_react.default.createElement(Wrapper, null, content) : content;
  return forceRemount && unmountElement(canvasElement), await renderElement(element, canvasElement), () => unmountElement(canvasElement);
}

// ../../node_modules/@storybook/react/dist/index.mjs
var import_preview_api = __toESM(require_preview_api(), 1);
var import_client_logger = __toESM(require_client_logger(), 1);
var { window: globalWindow } = scope;
globalWindow && (globalWindow.STORYBOOK_ENV = "react");
var RENDERER = "react";
var api = (0, import_preview_api.start)(renderToCanvas, { render });
var storiesOf = (kind, m) => api.clientApi.storiesOf(kind, m).addParameters({ renderer: RENDERER });
var configure = (...args) => api.configure(RENDERER, ...args);
var forceReRender = api.forceReRender;
var raw = api.clientApi.raw;
function setProjectAnnotations(projectAnnotations) {
  (0, import_preview_api.setProjectAnnotations)(projectAnnotations);
}
function setGlobalConfig(projectAnnotations) {
  (0, import_client_logger.deprecate)("setGlobalConfig is deprecated. Use setProjectAnnotations instead."), setProjectAnnotations(projectAnnotations);
}
var defaultProjectAnnotations = { render };
function composeStory(story, componentAnnotations, projectAnnotations, exportsName) {
  return (0, import_preview_api.composeStory)(story, componentAnnotations, projectAnnotations, defaultProjectAnnotations, exportsName);
}
function composeStories(csfExports, projectAnnotations) {
  return (0, import_preview_api.composeStories)(csfExports, projectAnnotations, composeStory);
}
var _a;
typeof module < "u" && ((_a = module == null ? void 0 : module.hot) == null ? void 0 : _a.decline());
export {
  composeStories,
  composeStory,
  configure,
  forceReRender,
  raw,
  setGlobalConfig,
  setProjectAnnotations,
  storiesOf
};
//# sourceMappingURL=@storybook_react.js.map
